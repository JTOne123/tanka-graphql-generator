trigger:
  batch: true
  branches:
    include:
    - master
  tags:
    include:
    - '*'
pr:
  - master
  
pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Debug'

stages:
- stage: Build
  displayName: Build packages
  jobs:
  - job: build
    steps:
    - task: UseDotNet@2
      displayName: Use dotnet core SDK
      inputs:
        packageType: 'sdk'
        version: '3.1.x'

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: build
        projects: |
          src/**/*.csproj
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: Test msbuild
      enabled: true
      inputs:
        command: test
        projects: '**/generator.msbuild.tests.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: Test integration
      enabled: true
      inputs:
        command: test
        projects: '**/generator.integration.tests.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: Bash@3
      displayName: Pack
      inputs:
        targetType: 'inline'
        script: |
          dotnet tool install GitVersion.Tool --tool-path .local-tools
          VERSION=$(.local-tools/dotnet-gitversion /output json /showvariable SemVer)
          echo -e "##vso[build.updatebuildnumber]$VERSION"
          dotnet pack --configuration $(buildConfiguration) -p:PackageVersion=$VERSION -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg -o $(Build.ArtifactStagingDirectory)/nuget
        failOnStderr: true

    - publish: $(Build.ArtifactStagingDirectory)/nuget
      artifact: nugets

- stage: Release
  displayName: Push packages to NuGet.org
  condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/tags'))
  jobs:
  - job: Push
    steps:
    - download: current
      artifact: nugets
      
    - task: NuGetToolInstaller@1
      inputs:
        versionSpec: 

    - task: NuGetCommand@2
      displayName: Push
      inputs:
        command: 'push'
        packagesToPush: '$(Pipeline.Workspace)/nugets/*.nupkg'
        nuGetFeedType: 'external'
        publishFeedCredentials: 'NuGet-TankaGraphQLGenerators'