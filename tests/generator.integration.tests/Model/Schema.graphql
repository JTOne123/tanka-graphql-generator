type NullabilityTestObject {
	nonNullInt: Int!
	int: Int
}

input TestInputObject {
	int: Int
	string: String
	float: Float
	boolean: Boolean
}

type ArgumentsTestObject {
	int(arg: Int): Int
	string(arg: String): String
	float(arg: Float): Float
	boolean(arg: Boolean): Boolean
	input(arg: TestInputObject): Int
}

type Subscription {
	int: Int!
	intWithArgument(arg1: Int!): Int!
	intWithTwoArguments(arg1: Int!, arg2: String): Int!
}